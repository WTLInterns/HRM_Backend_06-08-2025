# Production Configuration for Cloud Deployment
spring.application.name=hrm-biometric-backend

# Server Configuration for Cloud
server.port=${PORT:8080}
server.address=0.0.0.0

# Production Database Configuration (Use Environment Variables)
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/new_hrm?allowMultiQueries=true&useSSL=true&serverTimezone=UTC}
spring.datasource.username=${DATABASE_USERNAME:root}
spring.datasource.password=${DATABASE_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Production Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA Settings for Production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Mail Configuration (Production)
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=${MAIL_USERNAME}  
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=true

# Firebase Configuration (Production - Use Environment Variables)
firebase.type=${FIREBASE_TYPE}
firebase.project-id=${FIREBASE_PROJECT_ID}
firebase.private-key-id=${FIREBASE_PRIVATE_KEY_ID}
firebase.private-key=${FIREBASE_PRIVATE_KEY}
firebase.client-email=${FIREBASE_CLIENT_EMAIL}
firebase.client-id=${FIREBASE_CLIENT_ID}
firebase.auth-uri=${FIREBASE_AUTH_URI}
firebase.token-uri=${FIREBASE_TOKEN_URI}
firebase.auth-provider-x509-cert-url=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
firebase.client-x509-cert-url=${FIREBASE_CLIENT_X509_CERT_URL}
firebase.universe-domain=${FIREBASE_UNIVERSE_DOMAIN}

# Google Maps API Configuration
google.maps.api.key=${GOOGLE_MAPS_API_KEY}

# File Upload Settings
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# Cloud Punch API Configuration
cloud.punch.enabled=true
cloud.punch.authentication.required=false
cloud.punch.rate-limiting.enabled=true
cloud.punch.rate-limiting.requests-per-minute=1000

# Device Management
device.auto-registration.enabled=true
device.heartbeat.timeout-minutes=10
device.status.check-interval=300000

# Enhanced Real-Time Biometric Sync Configuration
biometric.enhanced.enabled=true
biometric.enhanced.sync-interval=15000
biometric.enhanced.max-transactions-per-sync=100
biometric.enhanced.duplicate-detection=true
biometric.enhanced.comprehensive-logging=true

# Multi-Device & Multi-Subadmin Configuration
biometric.multidevice.enabled=true
biometric.multidevice.device-isolation=true
biometric.multidevice.subadmin-context=true
biometric.multidevice.employee-id-conflict-resolution=true

# Employee Mapping Strategies
biometric.mapping.strategy1=device-mapping-table
biometric.mapping.strategy2=machine-empid-with-subadmin
biometric.mapping.strategy3=empcode-parsing
biometric.mapping.strategy4=direct-empid-lookup

# Data Source Configuration
biometric.datasource.iclock-table=easywdms.iclock_transaction
biometric.datasource.attendance-table=new_hrm.attendance
biometric.datasource.device-mapping-table=new_hrm.employee_device_mapping
biometric.datasource.terminal-table=new_hrm.subadmin_terminals

# Processing Configuration
biometric.processing.batch-size=50
biometric.processing.error-retry-attempts=3
biometric.processing.transaction-timeout=30
biometric.processing.cache-processed-transactions=true

# Real-time Notifications
biometric.notifications.enabled=true
biometric.notifications.websocket-topics=/topic/attendance,/topic/biometric
biometric.notifications.include-device-info=true
biometric.notifications.include-employee-details=true

# Monitoring and Debugging
biometric.monitoring.enabled=true
biometric.monitoring.log-unmapped-employees=true
biometric.monitoring.log-device-stats=true
biometric.monitoring.log-processing-time=true

# Security Configuration
spring.main.allow-bean-definition-overriding=true

# Static Resources (Production)
spring.web.resources.static-locations=classpath:/static/,classpath:/resources/
file.upload-dir=/app/uploads

# Logging Configuration for Production
logging.level.com.jaywant.demo=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# CORS Configuration for Production
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# SSL Configuration (if using HTTPS)
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE_PATH:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=PKCS12
